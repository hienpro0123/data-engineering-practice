import os
import requests
import zipfile
from urllib.parse import urlparse
from concurrent.futures import ThreadPoolExecutor

# Danh s√°ch c√°c URL c·∫ßn t·∫£i xu·ªëng
URLS = [
    "https://divvy-tripdata.s3.amazonaws.com/Divvy_Trips_2018_Q4.zip",
    "https://divvy-tripdata.s3.amazonaws.com/Divvy_Trips_2019_Q1.zip",
    "https://divvy-tripdata.s3.amazonaws.com/Divvy_Trips_2019_Q2.zip",
    "https://divvy-tripdata.s3.amazonaws.com/Divvy_Trips_2019_Q3.zip",
    "https://divvy-tripdata.s3.amazonaws.com/Divvy_Trips_2019_Q4.zip",
    "https://divvy-tripdata.s3.amazonaws.com/Divvy_Trips_2020_Q1.zip",
]

def create_downloads_dir():
    """T·∫°o th∆∞ m·ª•c downloads n·∫øu ch∆∞a t·ªìn t·∫°i"""
    if not os.path.exists('downloads'):
        os.makedirs('downloads')
        print("‚úÖ ƒê√£ t·∫°o th∆∞ m·ª•c downloads")

def download_file(url):
    """T·∫£i xu·ªëng m·ªôt file t·ª´ URL n·∫øu ch∆∞a c√≥"""
    try:
        filename = os.path.basename(urlparse(url).path)
        filepath = os.path.join('downloads', filename)

        if os.path.exists(filepath):
            print(f"‚ö†Ô∏è {filename} ƒë√£ t·ªìn t·∫°i, b·ªè qua...")
            return filepath

        print(f"‚¨áÔ∏è ƒêang t·∫£i xu·ªëng {filename}...")
        response = requests.get(url, stream=True)
        response.raise_for_status()

        with open(filepath, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                f.write(chunk)

        print(f"‚úÖ ƒê√£ t·∫£i xong {filename}")
        return filepath
    except Exception as e:
        print(f"‚ùå L·ªói khi t·∫£i {url}: {str(e)}")
        return None

def extract_zip(filepath):
    """Gi·∫£i n√©n file zip v√† x√≥a sau khi gi·∫£i n√©n"""
    if not filepath or not filepath.endswith('.zip'):
        return

    try:
        print(f"üì¶ ƒêang gi·∫£i n√©n {filepath}...")
        with zipfile.ZipFile(filepath, 'r') as zip_ref:
            zip_ref.extractall('downloads')
        os.remove(filepath)
        print(f"üóëÔ∏è ƒê√£ x√≥a file zip {filepath}")
    except Exception as e:
        print(f"‚ùå L·ªói khi gi·∫£i n√©n {filepath}: {str(e)}")

def download_and_extract(url):
    """T·∫£i v√† gi·∫£i n√©n m·ªôt file"""
    filepath = download_file(url)
    extract_zip(filepath)

def main():
    create_downloads_dir()
    print("üöÄ B·∫Øt ƒë·∫ßu t·∫£i xu·ªëng song song")
    with ThreadPoolExecutor(max_workers=5) as executor:
        executor.map(download_and_extract, URLS)

if __name__ == "__main__":
    main()
