import requests
import pandas as pd
from bs4 import BeautifulSoup
from pathlib import Path

# URL c·ªßa trang ch·ª©a d·ªØ li·ªáu
URL = "https://www.ncei.noaa.gov/data/local-climatological-data/access/2021/"
# Timestamp c·∫ßn t√¨m
TARGET_TIMESTAMP = "2024-01-19 10:27"

def main():
    # G·ª≠i y√™u c·∫ßu t·∫£i n·ªôi dung HTML c·ªßa trang web
    response = requests.get(URL)
    if response.status_code != 200:
        print("Kh√¥ng th·ªÉ truy c·∫≠p trang web.")
        return

    # D√πng BeautifulSoup ƒë·ªÉ ph√¢n t√≠ch c√∫ ph√°p HTML
    soup = BeautifulSoup(response.text, "html.parser")

    # T√¨m t·∫•t c·∫£ c√°c d√≤ng (tr) trong b·∫£ng HTML
    rows = soup.find_all("tr")

    # Duy·ªát t·ª´ng d√≤ng ƒë·ªÉ t√¨m ƒë√∫ng d√≤ng c√≥ th·ªùi gian Last Modified mong mu·ªën
    target_file = None
    for row in rows:
        columns = row.find_all("td")
        if len(columns) >= 2:
            last_modified = columns[1].text.strip()
            if last_modified == TARGET_TIMESTAMP:
                target_file = columns[0].find("a")["href"]
                break

    if not target_file:
        print("Kh√¥ng t√¨m th·∫•y file v·ªõi th·ªùi gian Last Modified mong mu·ªën.")
        return

    print(f"T√¨m th·∫•y file: {target_file}")

    # X√¢y d·ª±ng URL ƒë·∫ßy ƒë·ªß v√† t·∫£i file
    file_url = URL + target_file
    file_path = Path("weather_data.csv")

    print(f"üì• ƒêang t·∫£i file t·ª´: {file_url}")
    file_response = requests.get(file_url)
    if file_response.status_code != 200:
        print("Kh√¥ng th·ªÉ t·∫£i file.")
        return

    # L∆∞u file
    with open(file_path, "wb") as f:
        f.write(file_response.content)
    print("ƒê√£ l∆∞u file th√†nh c√¥ng.")

    # ƒê·ªçc file b·∫±ng pandas
    try:
        df = pd.read_csv(file_path)
    except Exception as e:
        print(f"L·ªói khi ƒë·ªçc file CSV: {e}")
        return

    # Ki·ªÉm tra xem c·ªôt 'HourlyDryBulbTemperature' c√≥ t·ªìn t·∫°i kh√¥ng
    if "HourlyDryBulbTemperature" not in df.columns:
        print("Kh√¥ng t√¨m th·∫•y c·ªôt 'HourlyDryBulbTemperature' trong d·ªØ li·ªáu.")
        return

    # T√¨m nhi·ªát ƒë·ªô cao nh·∫•t theo c·ªôt HourlyDryBulbTemperature
    max_temp = df["HourlyDryBulbTemperature"].max()
    hottest_rows = df[df["HourlyDryBulbTemperature"] == max_temp]

    # In c√°c d√≤ng c√≥ nhi·ªát ƒë·ªô cao nh·∫•t
    print("C√°c d√≤ng c√≥ nhi·ªát ƒë·ªô cao nh·∫•t:")
    print(hottest_rows)

if __name__ == "__main__":
    main()
